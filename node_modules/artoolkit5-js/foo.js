const { ARToolkit, ARController } = require('./dist/ARToolkit');
const fs = require('fs');

const cameraFileLocal = './data/camera_para.dat';
const markerFileLocal = './data/coke.patt';

async function initRuntime() {

  // load camera params file (binary)
  const cameraParams = new Uint8Array(fs.readFileSync(cameraFileLocal));

  // create controller instance
  const controller = await ARController.initWithDimensions(640, 480, cameraParams);
/*
  // create toolkit instance
  const artoolkit = await new ARToolkit().init();
  
  // load camera params file (binary)
  const cameraData = new Uint8Array(fs.readFileSync(cameraFileLocal));

  // load pattern file (text)
  const markerData = fs.readFileSync(markerFileLocal, 'utf8');

  // setup artoolkit
  const arId = artoolkit.instance.setup(640, 480);

  artoolkit.addMarker(0, markerData).then(markerId => {
    console.log('Added marker', 0, 'with ID', markerId);
  });

  artoolkit.loadCamera(cameraData).then(camId => {
    console.log(camId);
  });
  artoolkit.loadCamera(cameraData).then(camId => {
    console.log(camId);
  });
*/
}

initRuntime();